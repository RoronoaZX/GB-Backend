<?php

use App\Http\Controllers\BranchController;
use App\Http\Controllers\ProductController;
use App\Http\Controllers\RawMaterialController;
use App\Http\Controllers\WarehouseController;
use App\Http\Controllers\Api\ApiController;
use App\Http\Controllers\BirReportController;
use App\Http\Controllers\BranchEmployeeController;
use App\Http\Controllers\BranchPremixController;
use App\Http\Controllers\RecipeController;
use App\Http\Controllers\UserController;
use App\Http\Controllers\BranchProductController;
use App\Http\Controllers\BranchRawMaterialsReportController;
use App\Http\Controllers\BranchRecipeController;
use App\Http\Controllers\BranchReportController;
use App\Http\Controllers\BreadAddedController;
use App\Http\Controllers\BreadSalesReportController;
use App\Http\Controllers\CakeReportController;
use App\Http\Controllers\CashAdvanceController;
use App\Http\Controllers\DailyTimeRecordController;
use App\Http\Controllers\DeviceController;
use App\Http\Controllers\EmployeeAllowanceController;
use App\Http\Controllers\EmployeeBenefitController;
use App\Http\Controllers\EmployeeController;
use App\Http\Controllers\EmployeeCreditProductsController;
use App\Http\Controllers\EmployeeCreditsController;
use App\Http\Controllers\EmployeeDeductionController;
use App\Http\Controllers\EmploymentTypeController;
use App\Http\Controllers\ExpencesReportController;
use App\Http\Controllers\HistoryLogController;
use App\Http\Controllers\HolidayController;
use App\Http\Controllers\IncentiveEmployeeReportsController;
use App\Http\Controllers\IncentivesBasesController;
use App\Http\Controllers\InitialBakerReportController;
use App\Http\Controllers\InitialBakerreportsController;
use App\Http\Controllers\OtherAddedStocksController;
use App\Http\Controllers\OtherProductsController;
use App\Http\Controllers\OtherStocksReportController;
use App\Http\Controllers\PayslipController;
use App\Http\Controllers\RequestPremixController;
use App\Http\Controllers\SalesReportsController;
use App\Http\Controllers\SelectaAddedStockController;
use App\Http\Controllers\SelectaSalesReportController;
use App\Http\Controllers\SelectaStockAddedController;
use App\Http\Controllers\SelectaStocksReportController;
use App\Http\Controllers\SoftdrinksAddedStocksController;
use App\Http\Controllers\SoftdrinksSalesReportController;
use App\Http\Controllers\SoftdrinksStocksReportController;
use App\Http\Controllers\SupervisorController;
use App\Http\Controllers\UniformController;
use App\Http\Controllers\WarehouseEmployeeController;
use App\Http\Controllers\WarehouseRawMaterialsReportController;
use App\Http\Controllers\WarehouseScalingReportController;
use App\Http\Controllers\WarehouseStockReportsController;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Route;

// Route::get('/user', function (Request $request) {
//     return $request->user();
// })->middleware('auth:sanctum');

Route::post('register',[ApiController::class, 'register']);
Route::post('login',[ApiController::class, 'login']);
Route::group([
    "middleware" => ['auth:sanctum']
], function(){
    //profile
    Route::get('profile',[ApiController::class, 'profile']);

    //
    Route::get('logout',[ApiController::class, 'logout']);

    // Route::post('refresh-tokens',[ApiController::class, 'logout']);


});

Route::middleware('auth:sanctum')->get('/user', function (Request $request) {
    return $request->user();
});

Route::apiResource('users', UserController::class);
Route::apiResource('raw-materials', RawMaterialController::class);
Route::apiResource('warehouses', WarehouseController::class);
Route::apiResource('branches', BranchController::class);
Route::apiResource('products', ProductController::class);
Route::apiResource('recipes', RecipeController::class);
Route::apiResource('branch-raw-materials', BranchRawMaterialsReportController::class);
Route::apiResource('initial-baker-report', InitialBakerreportsController::class);
Route::apiResource('branch-products', BranchProductController::class);
Route::apiResource('sales-report', SalesReportsController::class);
Route::apiResource('branch-production-report', BranchReportController::class);
Route::apiResource('employment-types', EmploymentTypeController::class);
Route::apiResource('employee', EmployeeController::class);
Route::apiResource('branchEmployee', BranchEmployeeController::class);
Route::apiResource('device', DeviceController::class);
Route::apiResource('dtr', DailyTimeRecordController::class);
Route::apiResource('employee-allowance', EmployeeAllowanceController::class);
Route::apiResource('employee-benefit', EmployeeBenefitController::class);
Route::apiResource('cash-advance', CashAdvanceController::class);
Route::apiResource('uniform', UniformController::class);
Route::apiResource('branch-recipe', BranchRecipeController::class);
Route::apiResource('cake-report', CakeReportController::class);
// Route::apiResource('branch-add-bread-production-report', BreadSalesReportController::class);
Route::apiResource('warehouse-employee', WarehouseEmployeeController::class);
Route::apiResource('warehouse-raw-materials-report', WarehouseRawMaterialsReportController::class);
Route::apiResource('selecta-stocks-added', SelectaAddedStockController::class);
Route::apiResource('selecta-stocks-report', SelectaStocksReportController::class);
Route::apiResource('softdrinks-stocks-added', SoftdrinksAddedStocksController::class);
Route::apiResource('softdrinks-stocks-report', SoftdrinksStocksReportController::class);
Route::apiResource('other-stocks-added', OtherAddedStocksController::class);
Route::apiResource('other-stocks-report', OtherStocksReportController::class);
Route::apiResource('warehouseRawMaterials-add-supply', WarehouseStockReportsController::class);
Route::apiResource('warehouse-rawMaterials-report', WarehouseScalingReportController::class);
Route::apiResource('branch-premix', BranchPremixController::class);
Route::apiResource('request-premix', RequestPremixController::class);
Route::apiResource('sending-bread-to-branch', BreadAddedController::class);
Route::apiResource('delivery-receipt', BirReportController::class);
Route::apiResource('history-logs', HistoryLogController::class);
Route::apiResource('holiday', HolidayController::class);
Route::apiResource('incentives-bases', IncentivesBasesController::class);
Route::apiResource('incentive-employee', IncentiveEmployeeReportsController::class);
Route::apiResource('payslip', PayslipController::class);

Route::post('branch/raw-materials/bulk-create', [BranchRawMaterialsReportController::class, 'bulkStore']);
Route::post('update-branch-date-for-bir-report/{id}', [BirReportController::class, 'updateDateForReports']);
Route::post('update-branch-amount-for-bir-report/{id}', [BirReportController::class, 'updateAmountForReports']);
Route::post('update-branch-tin-no-for-bir-report/{id}', [BirReportController::class, 'updateTinNoForReports']);
Route::post('update-branch-address-for-bir-report/{id}', [BirReportController::class, 'updateAddressReports']);
Route::post('update-receipt-no-for-bir-report/{id}', [BirReportController::class, 'updateReceiptNoForReports']);
Route::post('update-branch-description-for-bir-report/{id}', [BirReportController::class, 'updateBranchDescriptionForReports']);
Route::post('saving-bir-report-admin', [BirReportController::class, 'savingBIRReportAdmin'] );
// Route::post('saving-vat-admin', [BirReportController::class, 'savingVATAdmin'] );
Route::post('received-branch-bread', [BreadAddedController::class, 'receivedBread']);
Route::post('admin-sales-report', [SalesReportsController::class, 'adminStoreSalesReport']);
Route::post('search-allowance', [EmployeeAllowanceController::class, 'searchAllowance']);
Route::post('search-benefit', [EmployeeBenefitController::class, 'searchBenefit']);
Route::post('search-uniform', [UniformController::class, 'searchUniform']);
Route::post('search-cash-advance', [CashAdvanceController::class, 'searchCashAdvances']);
Route::post('approveOvertime', [DailyTimeRecordController::class, 'approveOvertime']);
Route::post('declineOvertime', [DailyTimeRecordController::class, 'declineOvertime']);
Route::post('check-dtr-status', [DailyTimeRecordController::class, 'checkDtrStatus']);
Route::post('check-uuid-id', [DailyTimeRecordController::class, 'checkIdAndUuid']);
Route::post('check-dtr-ot-status', [DailyTimeRecordController::class, 'checkOTDtrStatus']);
Route::post('markTimeIn', [DailyTimeRecordController::class, 'markTimeIn']);
Route::post('markTimeOut', [DailyTimeRecordController::class, 'markTimeOut']);
Route::post('markHalfDayOut', [DailyTimeRecordController::class, 'markHalfDayOut']);
Route::post('markOvertimeIn', [DailyTimeRecordController::class, 'markOvertimeIn']);
Route::post('markOvertimeOut', [DailyTimeRecordController::class, 'markOvertimeOut']);
Route::post('checkBreakStatus', [DailyTimeRecordController::class, 'checkBreakStatus']);
Route::post('break', [DailyTimeRecordController::class, 'break']);
Route::post('checkLunchBreakStatus', [DailyTimeRecordController::class, 'checkLunchBreakStatus']);
Route::post('lunchBreak', [DailyTimeRecordController::class, 'lunchBreak']);
Route::post('checkDevice', [DeviceController::class, 'checkDevice']);
Route::post('confirm-selecta-report/{id}', [SelectaStocksReportController::class, 'confirmReport']);
Route::post('confirm-softdrinks-report/{id}', [SoftdrinksStocksReportController::class, 'confirmReport']);
Route::post('confirm-otherProd-report/{id}', [OtherStocksReportController::class, 'confirmReport']);
// Route::post('admin-create-admin-insert-recipe-baker-report', [InitialBakerreportsController::class, 'adminCreateAdminInsertRecipeBakerReport']);
Route::post('admin-create-baker-report', [InitialBakerreportsController::class, 'adminCreateReport']);
Route::post('confirm-initial-baker-report/{id}', [InitialBakerreportsController::class, 'confirmReport']);
Route::post('decline-initial-baker-report/{id}', [InitialBakerreportsController::class, 'declineReport']);
Route::post('search-branches-by-id', [BranchProductController::class, 'searchBranchId' ]);
Route::post('search-branch-products', [BranchProductController::class, 'searchBranchProducts' ]);
Route::post('search-selecta-products', [BranchProductController::class, 'searchBranchProducts' ]);
Route::post('search-user', [UserController::class, 'searchUser' ]);
Route::post('search', [UserController::class, 'search' ]);
Route::post('search-user-with-branchID', [BranchEmployeeController::class, 'searchUserWithBranch' ]);
Route::post('search-branch-employee', [BranchEmployeeController::class, 'searchBranchEmployee' ]);
Route::post('search-branch-rawMaterials', [BranchRawMaterialsReportController::class, 'searchBranchRawMaterials' ]);
Route::post('search-warehouse-rawMaterials', [WarehouseRawMaterialsReportController::class, 'searchWarehouseRawMaterials' ]);
Route::post('warehouse/raw-materials/bulk-create', [WarehouseRawMaterialsReportController::class, 'bulkStore' ]);
Route::post('search-products', [BranchProductController::class, 'searchProducts']);
Route::post('search-branch',[ BranchController::class, 'searchBranch']);
Route::post('search-warehouse',[ WarehouseController::class, 'searchWarehouse']);
Route::post('search-employees', [EmployeeController::class, 'searchEmployees']);
Route::post('search-employees-person-in-charge', [EmployeeController::class, 'searchPersonInCharge']);
Route::post('searchEmployeesWithDesignation', [EmployeeController::class, 'searchEmployeesWithDesignation']);
Route::post('dtr-data', [DailyTimeRecordController::class, 'getDTRData']);
Route::post('search-drt', [DailyTimeRecordController::class, 'searchDTR']);
Route::post('saveOvertime', [DailyTimeRecordController::class, 'saveOvertime']);
Route::post('branch/{branchId}/cakeConfirmedReport', [CakeReportController::class, 'confirmReport']);
Route::post('decline-cake-maker-report/{id}', [CakeReportController::class, 'declineReport']);
Route::post('reports/{id}/decline-selecta-reports', [SelectaStocksReportController::class, 'declineReport']);
Route::post('reports/{id}/decline-softdrinks-reports', [SoftdrinksStocksReportController::class, 'declineReport']);
Route::post('reports/{id}/decline-otherstocks-reports', [OtherStocksReportController::class, 'declineReport']);
Route::post('branch-add-bread-production-report', [BreadSalesReportController::class, 'addingBreadProduction']);
Route::post('branch-add-selecta-production-report', [SelectaSalesReportController::class, 'addingSelectaProduction']);
Route::post('branch-add-softdrinks-production-report', [SoftdrinksSalesReportController::class, 'addingSoftdrinksProduction']);
Route::post('branch-add-other-production-report', [OtherProductsController::class, 'addingOtherProduction']);
Route::post('employee-adding-credits', [EmployeeCreditProductsController::class, 'storeEmployeeCredits']);
Route::post('employee-saving-credits', [EmployeeCreditsController::class, 'saveCreditReport']);
Route::post('employee-adding-expense', [ExpencesReportController::class, 'updateExpensesReport']);
Route::post('confirm-premix', [RequestPremixController::class, 'confirmPremix']);
Route::post('decline-premix', [RequestPremixController::class, 'declinePremix']);
Route::post('process-premix', [RequestPremixController::class, 'processPremix']);
Route::post('completed-premix', [RequestPremixController::class, 'completedPremix']);
Route::post('to-deliver-premix', [RequestPremixController::class, 'toDeliverPremix']);
Route::post('to-receive-premix', [RequestPremixController::class, 'toReceivePremix']);
Route::post('receive-premix', [RequestPremixController::class, 'receivePremix']);

Route::put('incentives-bases/update-number-employee/{id}', [IncentivesBasesController::class, 'updateNumberEmployee']);
Route::put('incentives-bases/update-target/{id}', [IncentivesBasesController::class, 'updateTarget']);
Route::put('incentives-bases/update-baker-multipier/{id}', [IncentivesBasesController::class, 'updateBakerMultipier']);
Route::put('incentives-bases/update-lamesador-multipier/{id}', [IncentivesBasesController::class, 'updateLamesadorMultipier']);
Route::put('incentives-bases/update-hornero-incentives/{id}', [IncentivesBasesController::class, 'updateHorneroIncentives']);
Route::put('update-employee-cash-advance-reason/{id}', [CashAdvanceController::class, 'updateCashAdvanceReason']);
Route::put('update-employee-cash-advance/{id}', [CashAdvanceController::class, 'updateCashAdvanceAmount']);
Route::put('update/uniform/{id}', [UniformController::class, 'updateUniform']);
Route::put('update-employee-sss-number-benefit/{id}', [EmployeeBenefitController::class, 'updateEmployeeSssNumberBenefit']);
Route::put('update-employee-sss-benefit/{id}', [EmployeeBenefitController::class, 'updateEmployeeSssBenefit']);
Route::put('update-employee-hdmf-number-benefit/{id}', [EmployeeBenefitController::class, 'updateEmployeeHdmfNumberBenefit']);
Route::put('update-employee-hdmf-benefit/{id}', [EmployeeBenefitController::class, 'updateEmployeeHdmfBenefit']);
Route::put('update-employee-phic-number-benefit/{id}', [EmployeeBenefitController::class, 'updateEmployeePhicNumberBenefit']);
Route::put('update-employee-phic-benefit/{id}', [EmployeeBenefitController::class, 'updateEmployeePhicBenefit']);
Route::put('update-employee-allowance/{id}', [EmployeeAllowanceController::class, 'updateEmployeeAllowance']);
Route::put('update-employee-birthdate/{id}', [EmployeeController::class, 'updateEmployeeBirthdate']);
Route::put('update-dtr-schedule-in/{id}', [DailyTimeRecordController::class, 'updateDtrScheduleIn']);
Route::put('update-dtr-schedule-out/{id}', [DailyTimeRecordController::class, 'updateDtrScheduleOut']);
Route::put('update-employee-designation/{id}', [EmployeeController::class, 'updateEmployeeDesignation']);
Route::put('update-employee-time-in/{id}', [EmployeeController::class, 'updateEmployeeTimeIn']);
Route::put('update-employee-time-out/{id}', [EmployeeController::class, 'updateEmployeeTimeOut']);
Route::put('update-employee-phone/{id}', [EmployeeController::class, 'updateEmployeePhone']);
Route::put('update-employee-address/{id}', [EmployeeController::class, 'updateEmployeeAddress']);
Route::put('update-employee-employmentType/{id}', [EmployeeController::class, 'updateEmployeeEmploymentType']);
Route::put('update-employee-fullname/{id}', [EmployeeController::class, 'updateEmployeeFullname']);
Route::put('user-email/{id}', [UserController::class, 'updateEmail']);
Route::put('update-user-profile/{userId}', [ApiController::class, 'updateUser']);
Route::put('update-name/{id}', [RecipeController::class, 'updateName']);
Route::put('update-target/{id}', [BranchRecipeController::class, 'updateTarget']);
Route::put('update-status/{id}', [RecipeController::class, 'updateStatus']);
Route::put('branch-premix-update-stocks/{id}', [BranchPremixController::class, 'updatePremixAvailableStocks']);
Route::put('branch-premix-update-status/{id}', [BranchPremixController::class, 'updateRequestPremixStatus']);
Route::put('branch-update-status/{id}', [BranchRecipeController::class, 'branchUpdateStatus']);
Route::put('update-bread-sales-breadOut-report/{id}', [BreadSalesReportController::class, 'updateBreadOut' ]);
Route::put('update-bread-sales-remaining-report/{id}', [BreadSalesReportController::class, 'updateRemaining' ]);
Route::put('update-bread-sales-beginnings-report/{id}', [BreadSalesReportController::class, 'updateBeginnings' ]);
Route::put('update-bread-sales-newProduction-report/{id}', [BreadSalesReportController::class, 'updatedNewProduction' ]);
Route::put('update-bread-sales-price-report/{id}', [BreadSalesReportController::class, 'updatePrice' ]);
Route::put('update-selecta-sales-price-report/{id}', [SelectaSalesReportController::class, 'updatePrice' ]);
Route::put('update-selecta-sales-beginnings-report/{id}', [SelectaSalesReportController::class, 'updatedBeginnings' ]);
Route::put('update-selecta-sales-remaining-report/{id}', [SelectaSalesReportController::class, 'updatedRemaining' ]);
Route::put('update-selecta-sales-selctaOut-report/{id}', [SelectaSalesReportController::class, 'updatedSelectaOut' ]);
Route::put('update-selecta-sales-addedstocks-report/{id}', [SelectaSalesReportController::class, 'updatedAddedStocks' ]);
Route::put('update-selecta-sales-out-report/{id}', [SelectaSalesReportController::class, 'updatedSelectaOut' ]);
Route::put('update-softdrinks-sales-price-report/{id}', [SoftdrinksSalesReportController::class, 'updatePrice' ]);
Route::put('update-softdrinks-sales-beginnings-report/{id}', [SoftdrinksSalesReportController::class, 'updatedBeginnings' ]);
Route::put('update-softdrinks-sales-remaining-report/{id}', [SoftdrinksSalesReportController::class, 'updatedRemaining' ]);
Route::put('update-softdrinks-sales-out-report/{id}', [SoftdrinksSalesReportController::class, 'updatedSoftdrinksOut' ]);
Route::put('update-softdrinks-sales-addedstocks-report/{id}', [SoftdrinksSalesReportController::class, 'updatedAddedStocks' ]);
Route::put('update-otherProducst-sales-price-report/{id}', [OtherProductsController::class, 'updatePrice' ]);
Route::put('update-otherProducst-sales-beginnings-report/{id}', [OtherProductsController::class, 'updatedBeginnings' ]);
Route::put('update-otherProducst-sales-remaining-report/{id}', [OtherProductsController::class, 'updatedRemaining' ]);
Route::put('update-otherProducst-sales-out-report/{id}', [OtherProductsController::class, 'updatedOtherProductsOut' ]);
Route::put('update-otherProducst-sales-addedstocks-report/{id}', [OtherProductsController::class, 'updatedAddedStocks' ]);
Route::put('update-expenses-sales-name-report/{id}', [ExpencesReportController::class, 'updateName' ]);
Route::put('update-expenses-sales-amount-report/{id}', [ExpencesReportController::class, 'updateAmount' ]);
Route::put('update-expenses-sales-description-report/{id}', [ExpencesReportController::class, 'updateDescription' ]);
Route::put('update-branch-products/{id}', [BranchProductController::class, 'updatePrice' ]);
Route::put('update-branch-products-total-quantity/{id}', [BranchProductController::class, 'updateTotatQuatity' ]);
Route::put('update-branch-products-new-production/{id}', [BranchProductController::class, 'updateNewProduction' ]);
Route::put('update-branch-products-beginnings/{id}', [BranchProductController::class, 'updateBeginnings' ]);
Route::put('update-branch-rawMaterials/{id}', [BranchRawMaterialsReportController::class, 'updateStocks' ]);
Route::put('update-warehouse-rawMaterials/{id}', [WarehouseRawMaterialsReportController::class, 'updateStocks' ]);
Route::put('update/branch-baker-report/{id}', [InitialBakerreportsController::class, 'updateBakersReport']);

Route::get('fetch-employee-incentives-per-cut-off/{from}/{to}/{employee_id}', [IncentiveEmployeeReportsController::class, 'getIncentiveEmployeeReportsPerDtrCutOff']);
Route::get('employee-benefits-for-deduction/{employee_id}', [EmployeeBenefitController::class, 'fetchEmployeeBenefitsForDeduction']);
Route::get('fetch-cash-advance-for-deduction/{employee_id}', [CashAdvanceController::class, 'fetchCashAdvanceForDeduction']);
Route::get('fetch-uniform-for-deduction/{employee_id}', [UniformController::class, 'fetchUniformForDeduction']);
Route::get('fetch-employee-credits-per-cut-off/{from}/{to}/{employee_id}', [EmployeeCreditsController::class, 'fetchCreditsPerCutOff']);
Route::get('fetch-drt-payroll-per-cut-off/{id}', [DailyTimeRecordController::class, 'getDtrByStructuredCutoff']);
Route::get('warehouse/{warehouseId}/added-stocks-history', [WarehouseStockReportsController::class, 'fetchWarehouseAddedStocks']);
Route::get('fetch-branch-data-for-bir-report/{branchId}', [BirReportController::class, 'fetchBranchDataForReports']);
Route::get('fetch-expenses-report/{branchId}', [BirReportController::class, 'fetchExpensesReports']);
Route::get('fetch-vat-bir-reports/{branchId}', [BirReportController::class, 'fetchVATBirReports']);
Route::get('fetch-non-vat-bir-reports/{branchId}', [BirReportController::class, 'fetchNonVATBirReports']);
Route::get('get-request-branch-employee-premix/{branchId}/{employeeId}', [RequestPremixController::class, 'getBranchEmployeePremix' ]);
Route::get('get-request-branch-premix/{branchId}', [RequestPremixController::class, 'getBranchPremix' ]);
Route::get('get-receive-premix/{warehouseId}', [RequestPremixController::class, 'getRecievePremix' ]);
Route::get('get-to-receive-premix/{warehouseId}', [RequestPremixController::class, 'getToReceivePremix' ]);
Route::get('get-to-deliver-premix/{warehouseId}', [RequestPremixController::class, 'getToDeliverPremix' ]);
Route::get('get-completed-premix/{warehouseId}', [RequestPremixController::class, 'getcompletedPremix' ]);
Route::get('get-process-premix/{warehouseId}', [RequestPremixController::class, 'getProcessPremix' ]);
Route::get('get-decline-premix/{warehouseId}', [RequestPremixController::class, 'getDeclineReports' ]);
Route::get('get-confirm-premix/{warehouseId}', [RequestPremixController::class, 'getConfirmReports' ]);
Route::get('get-branch-premix/{branch_id}', [BranchPremixController::class, 'getBranchPremix' ]);
Route::get('search-premix', [BranchPremixController::class, 'searchBranchPremix' ]);
Route::get('warehouse/{warehouseId}/branch', [BranchController::class, 'fetchBranchUnderWarehouse' ]);
Route::get('fetch-bread-products', [BranchProductController::class, 'fetchBranchBreadProducts' ]);
Route::get('fetch-selecta-products', [BranchProductController::class, 'fetchBranchSelectaProducts' ]);
Route::get('fetch-softdrinks-products', [BranchProductController::class, 'fetchBranchSoftdrinksProducts' ]);
Route::get('fetch-other-products', [BranchProductController::class, 'fetchBranchOtherProducts' ]);
Route::get('selecta-added-stocks/{branchId}/pending-reports', [SelectaStocksReportController::class, 'getPendingReports']);
Route::get('selecta-added-stocks/{branchId}/confirmed-reports', [SelectaStocksReportController::class, 'getConfirmedReport']);
Route::get('selecta-added-stocks/{branchId}/declined-reports', [SelectaStocksReportController::class, 'getDeclinedReport']);
Route::get('selecta-added-stocks/{branchId}', [SelectaStocksReportController::class, 'getBranchSelectaReports']);
Route::get('fetch-pending-send-branch-bread', [BreadAddedController::class, 'fetchPendingSendBread']);
Route::get('fetch-send-bread-to-branch/{branchId}', [BreadAddedController::class, 'getSentBreadBranchProduct']);
Route::get('softdrinks-added-stocks/{branchId}', [SoftdrinksStocksReportController::class, 'getBranchSoftdrinksReports']);
Route::get('softdrinks-added-stocks/{branchId}/pending-reports', [SoftdrinksStocksReportController::class, 'getPendingReports']);
Route::get('softdrinks-added-stocks/{branchId}/confirmed-reports', [SoftdrinksStocksReportController::class, 'getConfirmedReport']);
Route::get('softdrinks-added-stocks/{branchId}/declined-reports', [SoftdrinksStocksReportController::class, 'getDeclinedReport']);
Route::get('other-added-stocks/{branchId}', [OtherStocksReportController::class, 'getBranchOtherReports']);
Route::get('other-added-stocks/{branchId}/pending-reports', [OtherStocksReportController::class, 'getPendingReports']);
Route::get('other-added-stocks/{branchId}/confirmed-reports', [OtherStocksReportController::class, 'getConfirmedReport']);
Route::get('other-added-stocks/{branchId}/declined-reports', [OtherStocksReportController::class, 'getDeclinedReport']);
Route::get('pending-premix/{warehouseId}', [RequestPremixController::class, 'getPendingPremix']);
Route::get('warehouse/{warehouseId}', [WarehouseController::class, 'getWarehouse']);
Route::get('warehouse/{warehouseId}/warehouseBranchReports', [WarehouseController::class, 'getWarehouseBranchReport']);
Route::get('branch/{branchId}/getCakeOnDisplayProduct', [CakeReportController::class, 'getCakeOnDisplayProduct']);
Route::get('branch/{branchId}/cakePendingReport', [CakeReportController::class, 'getPendingReport']);
Route::get('branch/{userId}/cake-report', [CakeReportController::class, 'getBranchCakeReport']);
Route::get('branch/{branchId}/salesReport', [SalesReportsController::class, 'fetchBranchSalesReport']);
Route::get('get-bread-production', [InitialBakerreportsController::class, 'getInitialReportsData']);
Route::get('branch/{branchId}/rawMaterials',[ BranchRawMaterialsReportController::class, 'getRawMaterials']);
Route::get('branch/{branchId}/ingredients',[ BranchRawMaterialsReportController::class, 'fetchRawMaterialsIngredients']);
Route::get('warehouse/{warehouseId}/rawMaterials',[ WarehouseRawMaterialsReportController::class, 'getRawMaterials']);
Route::get('branch/{branchId}/bakerDoughReport',[ InitialBakerreportsController::class, 'fetchDoughReports']);
Route::get('branch/{userId}/bakerReport',[ InitialBakerreportsController::class, 'getReportsByUserId']);
Route::get('ingredients',[ RawMaterialController::class, 'fetchRawMaterialsIngredients']);
Route::get('bread-products', [ProductController::class, 'fetchBreadProducts']);
Route::get('search-branch',[ BranchController::class, 'searchBranch']);
Route::get('search-recipes',[ RecipeController::class, 'searchRecipe']);
Route::get('branch-recipe-search',[ BranchRecipeController::class, 'branchSearchRecipe']);
Route::get('branches/{branchId}/recipes', [BranchRecipeController::class, 'getBranchRecipe']);
Route::get('sample-fetch-pagination-branch-products', [BranchProductController::class, 'samplePaginationFretchingBranchProducts']);
Route::get('branches/{branchId}/products', [BranchProductController::class, 'getProducts']);
Route::get('branch-products/search', [BranchProductController::class, 'search']);
Route::get('branches/{branchId}/production-report', [BranchReportController::class, 'fetchBranchReport']);
Route::get('branches/{branchId}/branch-sales-report', [BranchReportController::class, 'fetchBranchSalesReport']);
Route::get('user/{userId}', [UserController::class, 'fetchUserById']);
Route::get('search-products', [ProductController::class, 'searchProducts']);
Route::get('search-rawMaterials', [RawMaterialController::class, 'searchRawMaterials']);
Route::get('fetchBranchWithEmployee', [BranchController::class, 'fetchBranchWithEmployee']);
Route::get('fetchWarehouseWithEmployee', [WarehouseController::class, 'fetchWarehouseWithEmployee']);
Route::get('fetchEmployeeUserID/{employee_id}', [EmployeeController::class, 'fetchEmployeeUserID']);
Route::get('fetchAllEmployee', [EmployeeController::class, 'fetchAllEmployee']);
Route::get('fetchSupervisorUnderBranch/{employee_id}', [SupervisorController::class, 'fetchSupervisorUnderBranch']);
Route::get('fetchEmployeeWithEmploymentType', [EmployeeController::class, 'fetchEmployeeWithEmploymentType']);
Route::get('fetchEmployeeWithEmploymentTypeAndDesignation', [EmployeeController::class, 'fetchEmployeeWithEmploymentTypeAndDesignation']);
Route::get('fetchCertianEmployeeWithEmploymentTypeAndDesignation/{id}', [EmployeeController::class, 'fetchCertianEmployeeWithEmploymentTypeAndDesignation']);
Route::get('employee-charges/{from}/{to}/{employee_id}', [SalesReportsController::class, 'fetchEmployeeCharges']);

